name: conda

on:
  # run on all pushes to any branch
  push:
    paths:
      # Only run on changes to source or test python files and environment.yml
      - "fractopo/**.py"
      - "tests/**.py"
      - ".github/workflows/**.yaml"
      - "pyproject.toml"
      - "environment.yml"

jobs:
  conda-environment-install:
    name: Conda Install & Test
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: "1.3.1-0"
          environment-file: environment.yaml
          init-shell: >-
            bash
            powershell
          cache-environment: true
          post-cleanup: "all"
          create-args: >-
            python=${{ matrix.python-version }}
      # - name: Cache conda
      #   uses: actions/cache@v3
      #   env:
      #     # Increase this value to reset cache if etc/example-environment.yml has not changed
      #     CACHE_NUMBER: 0
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: ${{ matrix.platform }}-conda-${{ env.CACHE_NUMBER }}-${{
      #       hashFiles('environment.yml') }}-${{
      #       matrix.python-version }}
      # - uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     activate-environment: fractopo
      #     environment-file: environment.yml
      #     python-version: ${{ matrix.python-version }}
      #     auto-activate-base: false
      #     # Use libmamba solver for faster CI
      #     mamba-version: "*"
      #     # IMPORTANT: This needs to be set for caching to work properly!
      #     use-only-tar-bz2: true
      - name: Print conda environment
        run: |
          # Print environment
          conda info
          conda list
          python --version
      - name: Run unit tests
        run: |
          # Test package import
          python -c 'import fractopo'
          # Test module entrypoint
          python -m fractopo --help
          # Run unittests with pytest
          pytest -v
